server {
	listen 1338 default_server;
	server_name localhost;
	return 301 https://$host$request_uri;
}

server {
	listen            1337 http2 ssl;
	listen [::]:1337 http2 ssl;
	server_name localhost;

	ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
	ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;

	# Disable preloading HSTS for now.  You can use the commented out header line that includes
	# the "preload" directive if you understand the implications.
	#add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	
	gzip on;
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_types text/plain text/css text/xml application/json application/javascript image/x-icon;

	#error_page 497 301 =307 https://$host:$server_port$request_uri;
	error_page 497 =307 https://$host:$server_port$request_uri;

	location /flood/api {
		proxy_buffering off;
		proxy_cache off;
		proxy_pass http://127.0.0.1:3000;
	}

	location /flood/ {
		alias /var/www/flood_server/dist/assets/;
		try_files $uri /flood/index.html;

		#allow 192.168.50.0/24;
		#deny all;
	}

	rewrite ^/(flood)$ $1/ permanent;

	location / {
		proxy_pass http://localhost:1337;
		proxy_redirect off;
		proxy_set_header Host $host:$server_port;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Ssl on;
		
		return 301 /flood;
	}
}
